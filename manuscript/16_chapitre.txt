# Chapitre 6 : Dix erreurs du MES

L’essence de ce chapitre a été publié au début d’année 2015. Mes collègues éditeurs de logiciels MES m'ont fait remarquer la conso-nance négative du titre susceptible d’inquiéter leurs clients indus-triels. Nous convenions alors qu’une forme provocative pouvait inciter à suivre les pistes évoquées, améliorant les chances de suc-cès de mise en œuvre des applications, la satisfaction des indus-triels et donc le marché du logiciel.  Voici donc en guise de mise en bouche les observations assorties de recommandations qui m'ont conduites aux suggestions qui vont suivre. Ce chapitre éveillera quelques souvenirs aux intégrateurs ou industriels qui ont été directement concernés par des projets de type MES ou d’informatique industrielle. 

## Erreur N° 1 : Standardisation extrême
Avatar de la conception objet, l’approche « Core system » à la mode consiste à mettre à disposition des métiers des services in-formationnels génériques susceptibles de servir de manière iden-tique des besoins similaires exprimés par des acteurs et pour des métiers différents. D’un point de vue fonctionnel, la démarche consiste à conceptualiser, abstraire les spécifications pour couvrir des besoins proches par un nombre réduit de services généralisés. Globalement vertueuse, cette approche ne doit pas être dogma-tique au point de créer des problèmes graves d’ordre fonctionnel, humain ou systémique. 
La réponse standard risque de ne pas couvrir correctement le be-soin fonctionnel réel, ou se révéler inutilement sophistiquée et complexe pour certains métiers. Il sera nécessaire de créer des va-riantes plus adaptées aux spécificités locales. 
Le facteur humain est récalcitrant aux initiatives dont il n’est pas partie prenante. L’approche classique « top-down » suscite la mé-fiance. Il est prudent de différer le déploiement sur les îlots de résistance, susceptibles de devenir positivement demandeurs lors-que le système aura démontré ses qualités.
La viabilité de l’entreprise induit une certaine autonomie des enti-tés opérationnelles que la standardisation peut compromettre si elle n’est pas traitée au bon niveau. Il est normal de standardiser les flux de communication, le reportage et les indicateurs de per-formance opérationnelle pertinents au niveau de l’entreprise ou d’offrir une plate-forme informatique ouverte au développement à côté des fonctions standard. Par contre, il peut être néfaste d’imposer aux usines leurs indicateurs internes de performance ou leurs méthodes d’ordonnancement. De même, la granularité du contrôle opérationnel doit être adaptée au besoin de la gestion opérationnelle de l’entité concernée, et ne correspond pas à la maille du contrôle de gestion et de la gestion de production. Mal conduite, la standardisation risque de figer la régénération vitale créative du système opérationnel. 

## Erreur N° 2 : Périmètre fonctionnel trop large
La programmation de la transformation peut prendre différentes formes, succession de projets ou d’actions de plus ou moins grande ampleur, du déploiement d’une fonction sur une cible mé-tier isolée jusqu’au remplacement global de l’ensemble des appli-cations sur tout le système opératif, par une planification à long terme ou de manière opportuniste.  
Le business case ambitieux d’un projet spécifique peut être motivé par l’espoir de sa réalisation grâce à une pléthore d’arguments à destination des instances décisionnelles. Techniquement, il est plus simple de procéder à la refondation complète d’une construc-tion intriquée difficile à faire cohabiter avec une nouvelle solution.
De façon générale, le niveau de risque est corrélé avec la taille des projets. L’effet tunnel et la durée découragent les acteurs et les utilisateurs, élargit l’écart avec l’évolution continue des besoins, voire de la technologie. Dans le domaine particulier de l’informatique industrielle, le besoin à couvrir est difficile à expri-mer et rapidement évolutif. Une spécification fonctionnelle lon-guement mûrie, cohérente, supposée exhaustive se révèle parfois à côté de la plaque avec une réponse inappropriée, lacunaire ou excessive par rapport aux véritables besoins. 
Lorsque les projets sont traités de manière indépendante, en de-hors d’un programme de transformation cohérent, il est difficile de servir des besoins ponctuels ou nouveaux, et d’offrir la réactivité et la flexibilité exigées pour servir le système opératif. L’informatique industrielle se présente comme un élément de per-turbation du métier et entre en conflit avec la transformation in-dustrielle elle-même. 
Le découplage de l’évolution technologique,  de la couverture de besoins fonctionnel et  du déploiement à destination de cibles mé-tiers / utilisateurs est à la base d’une gestion efficace de la trans-formation  dans les limites de l’engagement budgétaire. Il permet la programmation dynamique et la gestion de la performance de transformation informatique.
Devant un gros chantier, on pourra réduire le projet initial à sa part essentielle – par exemple la mise en place de la plate-forme technique et d’un pilote au périmètre fonctionnel et topologique réduit. La suite du programme pourrait enchaîner des projets ré-duits, ou mieux passer en mode structure de développement et déploiement permanent priorisé, supervisé et encadré par un budget de fonctionnement annuel (transformation continue).

## Erreur N° 3 : Mépriser l’existant 
Les applications en place, représentent une connaissance impor-tante pas toujours très explicite, résultant d'adaptations et d'amé-liorations successives qui échappe à la transcription fidèle en exi-gences pour la nouvelle solution. Qu’il s’agisse de fonctionnalités très spécifiques ou de la couverture fonctionnelle utile, de nom-breux projets échouent à reconstituer un écosystème offrant le même niveau de support que les applications qu’ils cherchent à remplacer, tant il est difficile de démêler l'utile de l'habitude. La « résistance au changement » est alors évoquée, mais la persuasion ne suffit pas toujours à compenser les besoins réels abandonnés dans l’aventure.
L’identification de ces applications et leur analyse critique permet-tent de prévenir une perte fonctionnelle inacceptable. On pourra au besoin différer leur démantèlement en redéfinissant les con-tours fonctionnels et en emballant proprement les éléments appli-catifs concernés, de façon à les intégrer dans le nouveau système dans l'attente de leur migration lors d’une nouvelle étape de trans-formation bien préparée.

## Erreur N° 4 : Pré-consultations déviantes 
Les projets MES intègrent souvent une phase d’exploration des solutions du marché : la veille technologique est l’un des moteurs de la transformation qui permet d’intégrer l’état de l’art dans les options de progrès. Par contre, cette démarche n’est pas forcément appropriée lors du cadrage d’un projet, ou mérite d'être abordée avec précautions. Le danger réside dans la confusion entre le rêve – ou la déception - suscité par l’action commerciale des fournis-seurs, et les besoins réels de l’entreprise. 
D’une part, l’exposé ou la démonstration commerciale du logiciel ne sont pas probants, la présentation étant soit sans rapport avec la problématique de l’entreprise, soit biaisée parce que ratée ou trop bien réussie. Les impressions laissées par ces présentations peuvent limiter les options aux impacts émotionnels face à des critères importants d’ordre technique, économique ou contractuel. On devrait éviter de convier les futurs utilisateurs aux pré-consultations de façon à éviter la contamination des besoins par l’esthétique et l’habileté de l'avant-vente. 
D’autre part, la démonstration de fonctions non prévues au projet peut faire naître des « besoins » dont la réalité devrait être mise à l’épreuve d’une évaluation objective de l’apport effectif au métier.

## Erreur N° 5 : Implication interne insuffisante
L’industriel délègue souvent la mise en œuvre informatique à des prestataires spécialisés et cherche à minimiser l’intensité de son implication en tant que donneur d’ordre soit en restreignant ses responsabilités et son activité dans la réalisation du projet, soit en s’entourant d’une AMOA (assistance à maîtrise d’ouvrage) ex-terne. Cette approche l’expose au risque d’être dépossédé de son système de transformation qu’il confie à une entité externe non concernée en premier chef par le devenir de l’entreprise. 
Or, la transformation est précisément l’activité qui assure la survie, le développement de l’intelligence et en filigrane de la perfor-mance. L’informatique, en particulier « industrielle » c’est-à-dire liée à l’objet même de l’existence de l’entreprise est un élément essentiel de cette transformation permanente.
L’allocation des moyens internes nécessaires pour un projet in-formatique représente un défi pour l’entreprise en mettant à con-tribution des acteurs qui devront partager leur temps avec leur activité opérationnelle. 
Le second point que nous avions évoqué (périmètre du projet trop large) n’offre guère d’autre solution que de constituer une équipe interne ad hoc dédiée au projet. Une telle structure éphémère traite la transformation comme une activité exceptionnelle alors qu’elle est intrinsèquement structurelle. 
L’entreprise doit impérativement garder la maîtrise de la dimen-sion informationnelle de sa transformation, et donc dédier des ressources à cet effet. L’ampleur de ces ressources devra être en rapport avec la dynamique de transformation souhaitée et adaptée à la taille maximale des projets.

## Erreur N° 6 : Mauvaise intégration des prestataires
La gestion de projet tend à circonscrire les rôles et les prestations au cadre du projet. Lorsqu’un intégrateur est sollicité pour le con-texte exclusif du projet sans espoir de collaboration à long terme, il doit considérer son seul intérêt immédiat dans ce contexte. Il est alors nécessaire d’établir des spécifications très précises, chaque modification / ajout fait l’objet d’avenants pris en compte pour le seul bilan du projet (compromis coût – qualité). Le bon gestion-naire de projet rejettera la plupart de ces aménagements pour s’en tenir au cahier des charges initial. Un second projet traitera des problèmes non résolus ou soulevés par le premier. Il en résultera une insatisfaction des utilisateurs, une mauvaise adéquation au besoin, et objectivement un échec du projet, que ce soit sur le plan qualitatif (gestion de projet rigoureuse) financière (avenants) ou délais (contractualisation des évolutions).
Cette rigidité affecte directement la performance de transforma-tion.  Combinée avec le point précédent, elle aggrave la perte de la connaissance et donc de la maîtrise même de cette transformation, aux conséquences létales.
Considérant l’importance de la transformation informatique, l’entreprise devra soit installer une cellule informatique indus-trielle conséquente en charge du pilotage de la stratégie et de la réponse aux besoins, de la conception au déploiement, soit établir un contrat de partenariat à long terme avec un fournis-seur/intégrateur qui devient une entité support formant partie de l’entreprise. Cette cellule ou ce partenaire traitera tous les ajuste-ments et développements évolutifs sur la plate-forme technolo-gique en place, et interviendra en supervision des projets plus importants.

## Erreur N° 7 : Incohérence de l’architecture informatique avec l’organisation
La planification et l’exécution doivent interagir de manière appro-priée selon les options organisationnelles qui fixent le degré de liberté du domaine opérationnel vis-à-vis des directives de la pla-nification. Il en est de même pour le partage des tâches et respon-sabilités des activités de conception produit/industrialisation, maintenance, logistiques et qualité. La conception informatique doit les respecter en ajustant les accès et la profondeur de visibilité aux utilisateurs que ce soit à travers l’urbanisation des applications calquées sur les domaines de responsabilité ou de manière plus fine et flexible par une approche de type SOA (Service Oriented Architecture) d’abstraction applicative des fonctions.
La réflexion systémique, l’optimisation organisationnelle, l’ajustement informationnel correspondant et la coordination gé-nérale des développements informatiques sont souvent absents de la cartographie des applications dont l’empreinte fonctionnelle découle davantage de leur potentialité et de la précédence des projets, que d’une programmation consciente.  Par exemple :
* la gestion des stocks ricoche entre ERP et MES, sa consolidation est laborieuse
* les ordres et réponses de fabrication portent nombre d’informations redondantes ou inutiles en s’attachant à une gra-nularité et un niveau de détail inadaptés
* L’évolution et l’introduction de nouveaux produits sont difficiles en imposant une élaboration et propagation complexes des don-nées techniques
* La gestion de la performance est entraînée dans des dérives dommageables, comme le suivi dans l’ERP des temps d’arrêt des machines perçu comme « flicage » inutile au lieu de s'en tenir à l’efficience des équipements nécessaire pour la planification capa-citaire.
Les projets sont finalement plus difficiles à réaliser, avec des op-tions de mise en œuvre réduites tandis que les utilisateurs souf-frent d’une situation détériorée et de contraintes résultant de la distorsion de l’informatique avec l’organisation.

## Erreur N° 8 : Négliger l’interopérabilité
Les logiciels intégrés d’entreprise comme les ERPs facilitent le dé-veloppement des applications autour d’une base de données unique. Les logiciels MES créent un espace linguistique à part tout en restant liés de manière étroite aux autres applications (ERPs, maintenance, qualité, ingénierie, développement) par les res-sources, les références et les flux d’activités.
Les interfaces des applications d’un projet avec les applications existantes sont souvent laissées à l’appréciation et à l’expertise de l’intégrateur. La relégation des interfaces au rang de trivialités à traiter de manière ad hoc par les informaticiens n’est pas toujours une cause immédiate de l’échec, mais inocule les germes d’un can-cer. A court terme, le maintien de la cohérence des référentiels (produits, matières, équipements) devient vite un cauchemar. Plus tard, l’évolution applicative et handicapée par le codage purement technique des canaux de communication.
Ce point découle du précédent. L’interopérabilité est liée au cou-plage systémique dans l’organisation industrielle et à la cartogra-phie applicative. Il est indispensable d’encadrer la notion tech-nique d’interface par celle linguistique d’interopérabilité prenant en compte le sens de l’information sur la base d’un langage d’entreprise cohérent avec le modèle d’architecture qui guide la transformation industrielle.  Elle implique la gestion d’une taxo-nomie des concepts et des données de référence.

## Erreur N° 9 : Conflit IT/ingénierie
Le domaine fonctionnel MES empiète sur celui de l’ERP ; il est normal l’ERP ou le MES soit en compétition sur la réalisation de certaines fonctions. La justification du MES réside souvent moins dans la couverture fonctionnelle que dans l'adaptation à l’exploitant plus qu’au gestionnaire, apte à gérer un niveau de détail indispensable dans l’atelier, inutile voire nuisible pour les acheteurs, vendeurs et stratégistes de l’entreprise, à absorber la complexité opérationnelle pour rendre possible son pilotage et son contrôle au sein de l’entreprise.
La nécessité de maîtriser la complexité de l’entreprise aboutit à des schémas d’organisation où l’informatique industrielle s’insère de différentes manières, aboutissant souvent à l’attribution du do-maine MES à une entité différente de celui de l’ERP, aboutissant à un positionnement concurrentiel sur les projets lorsque les res-ponsabilités ou les règles d’allocation ne sont pas clairement éta-blies.
Auxiliaire du système de production, service autonome à l’échelle de l’entreprise, extension de l’informatique d’entreprise, départe-ment de l’ingénierie ou structure mixte, il peut être nécessaire de repenser le modèle organisationnel de l’informatique industrielle pour prévenir des conflits inutiles. On peut chercher à optimiser le service informationnel en découplant l’aspect plate-forme centrali-sée (offrir des services de développement et de déploiement) et les aspects services et réalisations.

## Erreur N° 10 : Budget inadapté
On entend parfois que le retour sur investissement d’un projet MES n’est pas plus chiffrable que celui d’un ERP, il faut donc con-vaincre la direction qu’il est indispensable. D’autres prétendent offrir des économies de main d’oeuvre alors que personne ne sera licencié à l’issue du projet – au contraire ! D’autres décomptent les bouts de chandelles liés à une amélioration présumée de la pro-ductivité, alors que l’usine est sur-capacitaire. Dans la plupart des cas, le *business case* est fragile. A moins de parvenir à susciter l’enthousiasme ou la crainte, le projet ne se décide qu’à la condi-tion d’une dépense minimale faute d’une valorisation crédible du potentiel économique. Un budget insuffisant aboutissant à une solution insatisfaisante, la preuve est faite du bien-fondé de la mé-fiance managériale. Cette difficulté budgétaire entraîne donc deux types d’échec : abandon du projet et projet raté.
Le soin apporté à l’évaluation de l’impact économique est déter-minant pour définir le budget et les livrables du projet soutenant une projection crédible pour la direction.  Une telle évaluation de-vrait porter sur différents horizons temporels, sur le plan pure-ment économique ainsi que sous l’angle de la survie et du déve-loppement moyen-long terme, et ceci en impliquant de manière contradictoire les acteurs concernés. Cette évaluation peut être conduite pour un projet, mais elle est plus facilement et utilement déterminée globalement pour l’activité permanente de transforma-tion informatique : un budget multi-annuel (afin de pouvoir ab-sorber les pics de transformation) calibré en conséquence serait utilisable aussi bien pour les ajustements continus que pour les projets plus importants à la discrétion du responsable de l’informatique industrielle. Le contrôle est simplifié, permettant une plus grande réactivité de la transformation informatique in-dustrielle qui n’aurait pas à justifier par ses décisions technolo-giques incompréhensibles par la direction, mais qui démontrerait l'excellence de son service au métier.
